plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    // Add the Google services Gradle plugin
    id 'com.google.gms.google-services'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'

}

android {
    compileSdk app.compileSdk

    defaultConfig {
        applicationId "com.partyeer"
        minSdkVersion app.minSdk
        targetSdkVersion app.targetSdk
        versionCode app.versionCode
        versionName app.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    compileOptions {
        sourceCompatibility javaVersion
        targetCompatibility javaVersion
    }
    kotlinOptions {
        jvmTarget = javaVersion.toString()
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:30.3.2')

    // TODO: Add the dependencies for Firebase products you want to use
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'
    // Declare the dependency for the Firebase Authentication library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-auth-ktx'


    implementation project(':presentation')
    implementation project(':domain')
    implementation project(':data')
    implementation project(':util')

    addDependencies(dependencies, presentationDependencies)
    addDependencies(dependencies, domainDependencies)
    addDependencies(dependencies, dataDependencies)
    addDependencies(dependencies, utilDependencies)
}